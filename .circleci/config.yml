version: 2.1
orbs:
  aws-cli: circleci/aws-cli@1.2.1
  node: circleci/node@4.0.0
reusable-steps:
  - &compile-yarn-translations
    run:
      name: Compiling translations
      command: yarn compile
  - &create-reports-folders
    run:
      name: Creating reports folders
      command: |-
        mkdir -p ~/reports

jobs:
  lint:
    executor:
      name: node/default
      tag: "14.17"
    steps:
      - checkout
      - *create-reports-folders
      - node/install-packages:
          pkg-manager: yarn
      - *compile-yarn-translations
      - run:
          name: Running ESLint
          command: |-
            yarn lint --format junit --output-file ~/reports/eslint.xml
          when: always
      - store_test_results:
          path: ~/reports
      - store_artifacts:
          path: ~/reports

  test:
    executor:
      name: node/default
      tag: "14.17"
    environment:
      JEST_JUNIT_OUTPUT: "~/reports/jest/results.xml"
    steps:
      - checkout
      - *create-reports-folders
      - node/install-packages:
          pkg-manager: yarn
      - *compile-yarn-translations
      - run:
          name: Running Jest tests
          command: yarn test --ci --coverage --runInBand --coverageDirectory=./coverage --coverageReporters=lcov --reporters=default --reporters=jest-junit
          # environment:
          #   JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - store_test_results:
          path: ./reports/junit/
      - store_artifacts:
          path: ./coverage

  deploy: &deploy
    resource_class: medium+
    executor:
      name: node/default
      tag: "14.17"
    steps:
      - checkout
      - aws-cli/setup
      - node/install-packages:
          pkg-manager: yarn

      - *compile-yarn-translations
      - run:
          name: Building app for production
          command: yarn build
      - run:
          name: Deploying app to S3 bucket
          command: yarn deploy-$CIRCLE_BRANCH

  deploy-test:
    <<: *deploy

  deploy-develop:
    <<: *deploy

  deploy-preprod:
    <<: *deploy

  deploy-prod:
    <<: *deploy

  deploy-maroc:
    <<: *deploy

workflows:
  lint_test_deploy:
    jobs:
      - lint
      - test
      - deploy-test:
          context: s3-test
          requires:
            - lint
            - test
          filters:
            branches:
              only:
                - test
      - deploy-develop:
          context: s3-dev
          requires:
            - lint
            - test
          filters:
            branches:
              only:
                - develop
      - deploy-preprod:
          context: s3-preprod
          requires:
            - lint
            - test
          filters:
            branches:
              only:
                - preprod
      - hold:
          type: approval
          requires:
            - lint
            - test
          filters:
            branches:
              only:
                - master
                - maroc
      - deploy-prod:
          context: s3-prod
          requires:
            - hold
          filters:
            branches:
              only:
                - master
      - deploy-maroc:
          context: s3-maroc
          requires:
            - hold
          filters:
            branches:
              only:
                - maroc
